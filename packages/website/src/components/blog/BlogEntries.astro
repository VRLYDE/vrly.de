---
import { Image } from "astro:assets";
import Text from "@/components/fundations/elements/Text.astro";
// Icons
import ChevronRight from "@/components/fundations/icons/ChevronRight.astro";
import Clock from "@/components/fundations/icons/Clock.astro";

interface PostData {
  title: string;
  description: string;
  image: {
    url: string;
  };
  category: string;
  pubDate: Date;
  readingTime?: number;
}

interface Post {
  slug: string;
  data: PostData;
  body: string;
}

interface Props {
  post: Post;
}

const { post } = Astro.props as Props;

// Content
const { url, title, description, pubDate, image, category, readingTime } = {
  url: "/blog/posts/" + post.slug,
  title: post.data.title,
  description: post.data.description,
  image: post.data.image.url,
  category: post.data.category,
  readingTime:
    post.data.readingTime || Math.ceil(post.body.split(" ").length / 200), // Estimate reading time
  pubDate: new Date(post.data.pubDate).toLocaleDateString("de-DE", {
    year: "numeric",
    month: "long",
    day: "numeric",
  }),
};

// Category colors
const categoryColors: Record<string, string> = {
  "KI & Automatisierung": "bg-vrly-blue-50 text-vrly-blue-600",
  "DSGVO & Compliance": "bg-vrly-green-50 text-vrly-green-600",
  Praxistipps: "bg-vrly-teal-50 text-vrly-teal-600",
  Technologie: "bg-purple-50 text-purple-600",
  Fallstudien: "bg-orange-50 text-orange-600",
  News: "bg-vrly-neutral-100 text-vrly-slate-600",
};

const categoryColor = categoryColors[category] || categoryColors["News"];
---

<article
  class="border-vrly-neutral-200 hover:border-vrly-blue-300 group relative flex h-full cursor-pointer flex-col justify-between gap-4 overflow-hidden rounded-2xl border bg-white shadow-md transition-all duration-300 hover:shadow-xl"
>
  <a
    href={url}
    title={title}
    class="absolute inset-0 z-10"
    aria-label={`Artikel lesen: ${title}`}></a>

  <!-- Image -->
  <div class="relative overflow-hidden rounded-t-2xl">
    <Image
      src={image}
      alt={title}
      width="800"
      height="450"
      class="aspect-16/9 w-full object-cover object-center transition-transform duration-500 group-hover:scale-105"
    />
    <!-- Category Badge -->
    <div class="absolute top-4 left-4">
      <span
        class={`px-3 py-1 rounded-full text-xs font-medium ${categoryColor}`}
      >
        {category}
      </span>
    </div>
  </div>

  <!-- Content -->
  <div class="flex-1 p-6">
    <div class="mb-3 flex items-center gap-4">
      <time datetime={post.data.pubDate.toISOString()}>
        <Text tag="span" variant="textXS" class="text-vrly-slate-400">
          {pubDate}
        </Text>
      </time>
      {
        readingTime && (
          <div class="text-vrly-slate-400 flex items-center gap-1">
            <Clock size="xs" />
            <Text tag="span" variant="textXS">
              {readingTime} Min. Lesezeit
            </Text>
          </div>
        )
      }
    </div>

    <Text
      tag="h3"
      variant="textLG"
      class="text-vrly-slate-500 group-hover:text-vrly-blue-600 mb-2 line-clamp-2 font-semibold transition-colors"
    >
      {title}
    </Text>

    <Text
      tag="p"
      variant="textSM"
      class="text-vrly-slate-400 mb-4 line-clamp-3"
    >
      {description}
    </Text>
  </div>

  <!-- Footer -->
  <div class="px-6 pb-6">
    <Text
      tag="span"
      variant="textSM"
      class="text-vrly-blue-600 group-hover:text-vrly-blue-700 flex items-center gap-2 font-medium"
    >
      Weiterlesen
      <ChevronRight
        size="sm"
        class="duration-300 ease-out group-hover:translate-x-1"
      />
    </Text>
  </div>
</article>
