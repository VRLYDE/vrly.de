---
import { type CollectionEntry, getCollection } from "astro:content";
import type { ButtonProps } from "@/components/primitives/Button.astro";
import Link from "@/components/primitives/Link.astro";
import WorkPreview from "@/components/sections/WorkPreview.astro";

const currentLocale = Astro.currentLocale;

const works = await getCollection("works");

const recentWorks = works
  .map((work) => {
    const [lang, ...slug] = work.slug.split("/");
    return {
      ...work,
      lang: lang,
      slug: work.slug.startsWith("/") ? work.slug : `/${work.slug}`,
    };
  })
  .filter((page) => page.lang === currentLocale)
  .sort(
    (a, b) => a.data.lastUpdateDate.getTime() - b.data.lastUpdateDate.getTime(),
  )
  .slice(0, 4) as CollectionEntry<"works">[];

interface Props {
  title: string;
  buttons: ButtonProps[];
}

const { title, buttons } = Astro.props as Props;
---

<div class="flex items-center justify-center pt-20 pb-16 text-sm font-medium">
  <h2 class="my-1 text-[3.13rem] leading-none font-semibold">{title}</h2>
</div>

<div
  class="grid auto-cols-fr grid-cols-1 grid-rows-[auto_auto] gap-[3.13rem] text-sm font-medium md:grid-cols-2"
>
  {recentWorks.map((work) => <WorkPreview {work} />)}
</div>
<div
  class="flex flex-col items-center pt-16 pb-20 text-sm font-medium text-white"
>
  {
    buttons.map(({ title, href, style, icon }) => (
      <Link
        href={href}
        style={style as "primary" | "button" | "outline" | "buttonLight"}
        icon={icon}
      >
        {title}
      </Link>
    ))
  }
</div>
